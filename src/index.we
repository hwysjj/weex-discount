<template>
  <div class="wrapper">
    <div style="z-index:1000">
      <wxc-navpage background-color="#4FC143" title="Login" title-color="#ffffff">
      </wxc-navpage>
    </div>
    <div class="page-body">
      <header></header>
      <wxc-tip type="danger" if="{{error}}" value="{{error}}"></wxc-tip>      
      <div class="section">
          <div class="input-container">
            <input class="input" type="text" oninput="onFNameInput" placeholder="first name">
          </div>
          <text>.</text>
          <div class="input-container">
            <input class="input" type="text" oninput="onLNameInput" placeholder="last name">
          </div>
          <text class="email-text">@greendotcorp.com</text>
      </div>
      <div class="section">
        <div class="input-container">
          <input class="input" type="password" oninput="onPassInput" placeholder="password">
        </div>
      </div>
      <div class="btn-area">
        <div class="section">
          <wxc-button class="button" type="success" size="large" onclick="submit" value="Sign Up"></wxc-button>
        </div>
        <div class="section">
          <a href="{{registrationSrc}}">
            <text class="link-text">Registration</text>
          </a>
        </div>
      </div>
    </div>
  </div>
</template>

<style>
  .page-body {
    margin-top: 90;
    padding-left: 30;
    padding-right: 30;
  }
  .section {
    flex-direction: row;
    align-items: center;
    justify-content: center;
    margin-bottom: 30;
  }
  .input {
    padding-left: 30;
    padding-right: 30;
    height: 80;
    font-size: 30;
  }
  .input-container {
    border-bottom-width: 1;
    border-bottom-color: #dddddd;
    border-bottom-style: solid;
    flex: 1;
  }
  .email-text, .link-text {
    opacity: 0.4;
  }
  .btn-area {
    margin-top: 150;
  }
  .button {
    flex: 1;
  }
  .btn-area {
    margin-top: 60;
  }
</style>

<script>
  require('weex-components');
  const helper = require('./common/helper');
  const errors = require('./common/errors');
  module.exports = {
    data: {
      firstName: null,
      lastName: '',
      registrationSrc: null,
      password: null,
      error: null
    },
    created() {
      let bundleUrl = this.$getConfig().bundleUrl;
      let base = helper.getBaseUrl(bundleUrl, true);
      this.registrationSrc = base + 'registration.js';
    },
    computed: {
      email: {
        get() {
          return `${this.firstName}.${this.lastName}@greendotcorp.com`;
        }
      }
    },
    methods: {
      onFNameInput(event) {
        this.firstName = event.value;
      },
      onLNameInput(event) {
        this.lastName = event.value;
      },
      onPassInput(event) {
        this.password = event.value;
      },
      submit() {
        let self = this;
        if (!helper.EmailReg.test(self.email)) {
          self.error = errors.error.Name_Invalid;
          return;
        } else if (!self.password) {
          self.error = errors.error.Password_Required;
          return;
        } else {
          self.error = null;
        }
      }
    }
  }
</script>
